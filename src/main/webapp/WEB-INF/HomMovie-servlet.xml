<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="org.springframework.web.filter.DelegatingFilterProxy"/>
    <context:component-scan base-package="com.cinema"/>
    <context:annotation-config/>
    <mvc:annotation-driven/>
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/resources/*"/>
            <bean id="cacheInterceptor" class="com.cinema.web.interceptor.CacheInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location">
            <value>/config.properties</value>
        </property>
        <property name="fileEncoding" value="utf-8" />
    </bean>
    
    <bean id="cookieSerializer" class="org.springframework.session.web.http.DefaultCookieSerializer">
        <property name="cookieName" value="${cookie.name}" />
        <property name="cookiePath" value="${cookie.path}" />
        <property name="useSecureCookie" value="${cookie.secure}" />
        <property name="useHttpOnlyCookie" value="${cookie.httpOnly}" />
        <property name="cookieMaxAge" value="${cookie.maxAge}" />
    </bean>
    <bean id="httpSessionStrategy" class="org.springframework.session.web.http.CookieHttpSessionStrategy">
         <property name="cookieSerializer" ref="cookieSerializer" />
    </bean>
    <bean class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration"/>
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
        <property name="maxTotal" value="${redis.maxActive}"/> 
        <property name="maxIdle" value="${redis.maxIdle}"/> 
        <property name="MaxWaitMillis" value="${redis.maxWait}"/> 
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/> 
    </bean> 
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}"
        p:port="${redis.port}"
        p:password="${redis.pass}"
        p:pool-config-ref="poolConfig"/>
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />
        <property name="defaultSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>

    <bean id="sessionRepositoryFilter"
          class="org.springframework.session.web.http.SessionRepositoryFilter">
        <constructor-arg ref="sessionRepository"/>
        <property name="httpSessionStrategy">
            <bean class="org.springframework.session.web.http.CookieHttpSessionStrategy">
                <property name="cookieSerializer" ref="cookieSerializer" />
            </bean>
        </property>
    </bean>
    


    <bean id="exceptionResolver" class="com.cinema.web.config.ExceptionHandler"/>


    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="packagesToScan" value="com.cinema.business.entities" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="hibernate.dialect">com.cinema.web.config.MySQL5Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                <prop key="hibernate.connection.url">${db.url}</prop>
                <prop key="hibernate.connection.username">${db.user}</prop>
                <prop key="hibernate.connection.password">${db.password}</prop>
                <prop key="hibernate.connection.provider_class">org.hibernate.c3p0.internal.C3P0ConnectionProvider</prop>
                <prop key="hibernate.c3p0.min_size">5</prop>
                <prop key="hibernate.c3p0.max_size">20</prop>
                <prop key="hibernate.c3p0.timeout">120</prop>
                <prop key="hibernate.c3p0.idle_test_period">3000</prop>
            </props>
        </property>
    </bean>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    <bean id="exceptionTranslation"
          class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor">
    </bean>
    <jpa:repositories base-package="com.cinema.business.entities.repositories"
                      transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"/>

    
</beans>


